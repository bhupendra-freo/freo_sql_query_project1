export const tables = [
  {
    id: 1,
    name: "USER",
    data: [
      {
        fieldName: "id",
        columnName: "id",
        dataType: "VARCHAR",
        length: 36,
        partition: "Partition",
        remarks:
          "Customer ID for logged in users. Guest ID (is_guest = true) for guest users (i.e. not user without login)",
      },
      {
        fieldName: "email",
        columnName: "email",
        dataType: "VARCHAR",
        length: 256,
        partition: "no",
        remarks: "User email id",
      },
      {
        fieldName: "phone",
        columnName: "phone",
        dataType: "NUMERIC",
        length: 16,
        partition: "no",
        remarks: "User phone",
      },
      {
        fieldName: "isGuest",
        columnName: "is_guest",
        dataType: "BOOLEAN",
        length: "NA",
        partition: "Partition",
        remarks: "To differenciate guest user with logged in user",
      },
      {
        fieldName: "createdAt",
        columnName: "created_at",
        dataType: "TIMESTSAMP",
        length: "NA",
        partition: "no",
        remarks: "Record created timestamp",
      },
      {
        fieldName: "modifiedAt",
        columnName: "modified_at",
        dataType: "TIMESTSAMP",
        length: "NA",
        partition: "no",
        remarks: "Record modified timestamp",
      },
    ],
  },
  {
    id: 2,
    name: "USER_ATTRIBUTE",
    data: [
      {
        fieldName: "customerId",
        columnName: "customer_id",
        dataType: "VARCHAR",
        length: 36,
        partition: "Partition",
        remarks: "Customer ID",
      },
      {
        fieldName: "key",
        columnName: "key",
        dataType: "VARCHAR",
        length: 256,
        partition: "Partition",
        remarks: "Attribute Key",
      },
      {
        fieldName: "attributeType",
        columnName: "attr_type",
        dataType: "CHAR",
        length: 16,
        partition: "no",
        remarks: "Attribute Type. enum: SYS, USR (More will be added later)",
      },
      {
        fieldName: "attributeDataType",
        columnName: "attr_data_type",
        dataType: "VARCHAR",
        length: 256,
        partition: "no",
        remarks:
          "Attribute data type. enum: 'STR' for STRING, 'BOL' for BOOLEAN, 'INT' for INTEGER, 'FLT' for FLOAT, 'TSM' for TIMESTAMP",
      },
      {
        fieldName: "valueStr",
        columnName: "value_string",
        dataType: "VARCHAR",
        length: 512,
        partition: "no",
        remarks: "Holds string value for all the data type for the given key",
      },
      {
        fieldName: "valueInt",
        columnName: "value_integer",
        dataType: "LONG",
        length: "NA",
        partition: "no",
        remarks: "Holds int / long value for 'INT' data type for the given key",
      },
      {
        fieldName: "valueFloat",
        columnName: "value_float",
        dataType: "DOUBLE",
        length: "NA",
        partition: "no",
        remarks:
          "Holds float / double value for 'FLOAT' data type for the given key",
      },
      {
        fieldName: "valueTimestamp",
        columnName: "value_timestamp",
        dataType: "TIMESTSAMP",
        length: "NA",
        partition: "no",
        remarks: "Holds timestamp value for 'TSM' data type for the given key",
      },
      {
        fieldName: "valueBoolean",
        columnName: "value_boolean",
        dataType: "BOOL",
        length: "NA",
        partition: "no",
        remarks: "Holds boolean value for 'BOL' data type for the given key",
      },
      {
        fieldName: "appInstanceId",
        columnName: "app_instance_id",
        dataType: "UUID",
        length: "NA",
        partition: "no",
        remarks:
          "Application instance id. will be unique for every application client instance",
      },
      {
        fieldName: "customerInstanceId",
        columnName: "customer_instance_id",
        dataType: "UUID",
        length: "NA",
        partition: "no",
        remarks:
          "Customer instance id. will be unique for every customer and client instance",
      },
      {
        fieldName: "sessionId",
        columnName: "session_id",
        dataType: "UUID",
        length: "NA",
        partition: "no",
        remarks: "Customer session",
      },
      {
        fieldName: "deviceId",
        columnName: "device_id",
        dataType: "VARCHAR",
        length: 32,
        partition: "no",
        remarks: "Device Unique Id",
      },
      {
        fieldName: "advertisingId",
        columnName: "advertising_id",
        dataType: "VARCHAR",
        length: 64,
        partition: "no",
        remarks: "Device Advertising Id",
      },
      {
        fieldName: "guest_id",
        columnName: "guest_id",
        dataType: "VARCHAR",
        length: 36,
        partition: "no",
        remarks:
          "After merging the event with the customer_id (after login), this will hold the actual guest id",
      },
      {
        fieldName: "occurredAt",
        columnName: "occurred_at",
        dataType: "TIMESTSAMP",
        length: "NA",
        partition: "no",
        remarks: "Attribute change occurred time stamp",
      },
      {
        fieldName: "createdAt",
        columnName: "created_at",
        dataType: "TIMESTSAMP",
        length: "NA",
        partition: "no",
        remarks: "Record created timestamp",
      },
      {
        fieldName: "modifiedAt",
        columnName: "modified_at",
        dataType: "TIMESTSAMP",
        length: "NA",
        partition: "no",
        remarks: "Record modified timestamp",
      },
    ],
  },
  {
    id: 3,
    name: "EVENT",
    data: [
      {
        fieldName: "id",
        columnName: "id",
        dataType: "UUID",
        length: 25,
        partition: "Partition",
        remarks: "Event ID (PK)",
      },
      {
        fieldName: "eventType",
        columnName: "event_type",
        dataType: "VARCHAR",
        length: 64,
        partition: "no",
        remarks: "Event Type. enum: SYS, USR (More will be added later)",
      },
      {
        fieldName: "eventName",
        columnName: "event_name",
        dataType: "VARCHAR",
        length: 256,
        partition: "Partition",
        remarks: "Event name",
      },
      {
        fieldName: "customerId",
        columnName: "customer_id",
        dataType: "CHAR",
        length: 25,
        partition: "Partition",
        remarks: "Customer ID (it may have Guest ID also)",
      },
      {
        fieldName: "source",
        columnName: "source",
        dataType: "VARCHAR",
        length: 256,
        partition: "no",
        remarks: "Event source",
      },
      {
        fieldName: "platform",
        columnName: "platform",
        dataType: "VARCHAR",
        length: 256,
        partition: "no",
        remarks: "Client platform: iOS,Android,Web,Server",
      },
      {
        fieldName: "appVersion",
        columnName: "app_version",
        dataType: "CHAR",
        length: 16,
        partition: "no",
        remarks: "Client Application Version",
      },
      {
        fieldName: "sdkVersion",
        columnName: "sdk_version",
        dataType: "CHAR",
        length: 16,
        partition: "no",
        remarks: "Evently SDK Version",
      },
      {
        fieldName: "productId",
        columnName: "product_id",
        dataType: "VARCHAR",
        length: 256,
        partition: "no",
        remarks: "Product : MONEYTAP, FREOPAY, FREOSAVE, ONEAPP, UPI",
      },
      {
        fieldName: "occurredAt",
        columnName: "occurred_at",
        dataType: "TIMESTSAMP",
        length: "NA",
        partition: "Partition",
        remarks: "Event occurred timestamp",
      },
      {
        fieldName: "expiresAt",
        columnName: "expires_at",
        dataType: "TIMESTSAMP",
        length: "NA",
        partition: "no",
        remarks: "Eventy expiry timestamp",
      },
      {
        fieldName: "appInstanceId",
        columnName: "app_instance_id",
        dataType: "UUID",
        length: "NA",
        partition: "no",
        remarks:
          "Application instance id. will be unique for every application client instance",
      },
      {
        fieldName: "customerInstanceId",
        columnName: "customer_instance_id",
        dataType: "UUID",
        length: "NA",
        partition: "no",
        remarks:
          "Customer instance id. will be unique for every customer and client instance",
      },
      {
        fieldName: "sessionId",
        columnName: "session_id",
        dataType: "UUID",
        length: "NA",
        partition: "no",
        remarks: "Customer session",
      },
      {
        fieldName: "deviceId",
        columnName: "device_id",
        dataType: "VARCHAR",
        length: 36,
        partition: "no",
        remarks: "Device Unique Id",
      },
      {
        fieldName: "advertisingId",
        columnName: "advertising_id",
        dataType: "VARCHAR",
        length: 64,
        partition: "no",
        remarks: "Device Advertising Id",
      },
      {
        fieldName: "eventDuration",
        columnName: "event_duration",
        dataType: "INT",
        length: "NA",
        partition: "no",
        remarks: "Event duration in milli seconds",
      },
      {
        fieldName: "guest_id",
        columnName: "guest_id",
        dataType: "VARCHAR",
        length: 36,
        partition: "no",
        remarks:
          "After merging the event with the customer_id (after login), this will hold the actual guest id",
      },
      {
        fieldName: "createdAt",
        columnName: "created_at",
        dataType: "TIMESTSAMP",
        length: "NA",
        partition: "no",
        remarks: "Record created timestamp",
      },
    ],
  },
  {
    id: 4,
    name: "EVENT_ATTRIBUTE",
    data: [
      {
        fieldName: "id",
        columnName: "id",
        dataType: "CHAR",
        length: 25,
        partition: "no",
        remarks: "Event attribute id (PK)",
      },
      {
        fieldName: "eventId",
        columnName: "event_id",
        dataType: "CHAR",
        length: 25,
        partition: "Partition",
        remarks: "Event ID (FK referencing id column of event)",
      },
      {
        fieldName: "key",
        columnName: "key",
        dataType: "VARCHAR",
        length: 256,
        partition: "Partition",
        remarks: "Attribute key",
      },
      {
        fieldName: "attributeType",
        columnName: "attr_type",
        dataType: "CHAR",
        length: 3,
        partition: "no",
        remarks: "Attribute Type. enum: SYS, USR (More will be added later)",
      },
      {
        fieldName: "attributeDataType",
        columnName: "attr_data_type",
        dataType: "VARCHAR",
        length: 256,
        partition: "no",
        remarks:
          "Attribute data type. enum: 'STR' for STRING, 'BOL' for BOOLEAN, 'INT' for INTEGER, 'FLT' for FLOAT, 'TSM' for TIMESTAMP",
      },
      {
        fieldName: "valueStr",
        columnName: "value_string",
        dataType: "VARCHAR",
        length: 512,
        partition: "no",
        remarks: "Holds string value for all the data type for the given key",
      },
      {
        fieldName: "valueInt",
        columnName: "value_integer",
        dataType: "LONG",
        length: "NA",
        partition: "no",
        remarks: "Holds int / long value for 'INT' data type for the given key",
      },
      {
        fieldName: "valueFloat",
        columnName: "value_float",
        dataType: "DOUBLE",
        length: "NA",
        partition: "no",
        remarks:
          "Holds float / double value for 'FLOAT' data type for the given key",
      },
      {
        fieldName: "valueTimestamp",
        columnName: "value_timestamp",
        dataType: "TIMESTSAMP",
        length: "NA",
        partition: "no",
        remarks: "Holds timestamp value for 'TSM' data type for the given key",
      },
      {
        fieldName: "valueBoolean",
        columnName: "value_boolean",
        dataType: "BOOL",
        length: "NA",
        partition: "no",
        remarks: "Holds boolean value for 'BOL' data type for the given key",
      },
    ],
  },
];
